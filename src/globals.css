@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
    --primary: theme(colors.primary);
    --danger: theme('colors.danger');

    --surface: theme('colors.surface.DEFAULT');
    --on-surface: theme('colors.on.surface.DEFAULT');
    --on-surface-variant: theme('colors.on.surface.variant');

    --surface-high: theme('colors.surface.high');

    --background: theme('colors.background');

    --outline: theme('colors.outline.DEFAULT');
    --outline-variant: theme('colors.outline.variant');

    --primary-hover: color-mix(in srgb, currentColor 16%, var(--primary));
    --primary-press: color-mix(in srgb, currentColor 20%, var(--primary));

    --surface-hover: color-mix(in srgb, currentColor 16%, var(--surface));
    --surface-press: color-mix(in srgb, currentColor 20%, var(--surface));

    --surface-high-hover: color-mix(in srgb, currentColor 16%, var(--surface-high));
    --surface-high-press: color-mix(in srgb, currentColor 20%, var(--surface-high));

    --danger-hover: color-mix(in srgb, currentColor 16%, var(--danger));
    --danger-press: color-mix(in srgb, currentColor 20%, var(--danger));
}

html {
    @apply bg-background text-on-background;
}

select {
    background-image: url("./arrow-down.svg");
    background-position: right 0.5rem center;
    background-repeat: no-repeat;
    background-size: 1.5em 1.5em;
    padding-right: 2.5rem;
}

@layer components {
    .scrollbar-hidden {
        -ms-overflow-style: none;  /* IE and Edge */
        scrollbar-width: none; /* Firefox */

        /* Chrome, Safari and Opera */
        &::-webkit-scrollbar {
            display: none;
        }
    }
}

button:focus,
input:focus {
    @apply outline-none;
}

.react-flow {
    --xy-node-color: var(--on-surface);

    --xy-controls-button-color: var(--on-surface);
    --xy-controls-button-border-color: none;
    --xy-controls-button-background-color: var(--surface);

    --xy-controls-button-color-hover: var(--on-surface);
    --xy-controls-button-background-color-hover: var(--surface-hover);

    --xy-minimap-background-color: var(--background);
    --xy-minimap-node-background-color: var(--surface);
    --xy-minimap-mask-background-color: var(--surface-high);

    --xy-node-background-color: var(--surface);
    --xy-node-border: none;
    --xy-node-boxshadow-selected: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);

    --xy-background-pattern-color: var(--outline-variant);
}

.react-flow__controls {
    border-radius: 2px;
    overflow: hidden;
}

.react-flow__controls-button {
    width: 28px;
    height: 28px;
}

.react-flow__node-start,
.react-flow__node-if,
.react-flow__node-assign {
    padding: 10px;
}

.react-flow__node-new,
.react-flow__node-start,
.react-flow__node-if,
.react-flow__node-assign {
    border-radius: var(--xy-node-border-radius, var(--xy-node-border-radius-default));
    width: 150px;
    font-size: 12px;
    color: var(--xy-node-color, var(--xy-node-color-default));
    text-align: center;
    border: var(--xy-node-border, var(--xy-node-border-default));
    background-color: var(--xy-node-background-color, var(--xy-node-background-color-default));
    @apply transition-colors transition-shadow;
}

.react-flow__node-new.selected,
.react-flow__node-start.selected,
.react-flow__node-if.selected,
.react-flow__node-assign.selected {
    @apply ring-1 ring-primary;
}